{
  "name": "async-err",
  "version": "0.0.2",
  "description": "An easy way to make an error in Node.js async, when it would sync otherwise.",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter list"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stdarg/async-err.git"
  },
  "keywords": [
    "error",
    "err",
    "async"
  ],
  "author": {
    "name": "Edmond Meinfelder"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stdarg/async-err/issues"
  },
  "dependencies": {
    "debug": "0.7.4",
    "is2": "0.0.12"
  },
  "devDependencies": {
    "async": "0.2.10",
    "mocha": "1.17.1"
  },
  "readme": "async-err\n=========\n\nAn easy way to make an error in Node.js asynchronous, when it would be\nsynchronous otherwise.\n\n## Installation\n\n    npm install async-err\n\n## Example - non-throwing\n\n    'use strict';\n    var asyncerr = require('./index').asyncerr;\n    var fs = require('fs');\n\n    function asyncFunc(filename, cb) {\n      if (typeof var1 !== 'string')\n        return asyncerr(new Error('Error: Bad type for var1'), cb);\n\n      fs.readFile(filename, function (err, data) {\n        if (err) return cb(err);\n        cb(null, data);\n      });\n    }\n\n    asyncFunc(3, function(err, file) {\n      if (err) return console.log(err.message);\n      console.log('File contents: ', file);\n    });\n\nResults in the following output, after you type, `export DEBUG=\"async-err\"`:\n\n    async-err Error: Bad type for var1 +0ms\n    Error: Bad type for var1\n\n## API\n\n### asyncerr(err, cb)\nA convenience function to make otherwise sync errors async. If you give asyncerr\nincorrect arguments, it will send messages to the console via the debug module,\nbut that's it.\n\n#### Params:\n* **Object** *err* A Node.js Error object.\n* **Function** *cb* A function object as callback.\n\n### asyncerrThrows(err, cb)\nA convenience function to make otherwise sync errors async. If you give it\nincorrect arguments, it will throw and exception.\n\n#### Params:\n* **Object** *err* A Node.js Error object.\n* **Function** *cb* A function object as callback.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Edmond Meinfelder\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/stdarg/async-err",
  "_id": "async-err@0.0.2",
  "dist": {
    "shasum": "f7efd4680a4ff7a6fb865519c4f4a19fc9f0323b"
  },
  "_from": "async-err@0.0.2",
  "_resolved": "https://registry.npmjs.org/async-err/-/async-err-0.0.2.tgz"
}
